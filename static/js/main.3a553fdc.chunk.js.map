{"version":3,"sources":["components/Login.js","components/Signup.js","components/ForgotPassword.js","App.js","serviceWorker.js","index.js"],"names":["initialUser","email","password","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","user","objectSpread","state","defineProperty","target","name","value","onSubmit","preventDefault","alert","_this2","react_default","a","createElement","Row","Col","xs","className","FormGroup","FormControl","placeholder","required","type","sm","Button","variant","href","onClick","changeStep","Component","confirmPassword","Signup","ForgotPassword","App","context","handleClose","show","handleShow","theme","step","ButtonGroup","Modal","onHide","size","aria-labelledby","centered","Body","concat","Login_Login","Signup_Signup","ForgotPassword_ForgotPassword","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a553fdc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col, Button, FormControl, FormGroup } from \"react-bootstrap\";\n\nconst initialUser = {\n  email: \"\",\n  password: \"\"\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: { ...initialUser }\n    };\n  }\n\n  onChange = e => {\n    this.setState({\n      user: {\n        ...this.state.user,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    alert(\"Submmited successfuly.\");\n    this.setState({\n      user: { ...initialUser }\n    });\n  };\n\n  render() {\n    return (\n      <Row>\n        <Col xs={12}>\n          <form onSubmit={this.onSubmit}>\n            <Row>\n              <Col xs={12} className=\"form-container\">\n                <Col xs={12}>\n                  <h4 className=\"title\">Login</h4>\n                  <p className=\"title-message\">\n                    Please fill in your basic info\n                  </p>\n                </Col>\n                <Col xs={12}>\n                  <Row>\n                    <Col xs={12}>\n                      <FormGroup>\n                        <FormControl\n                          placeholder=\"Email Address\"\n                          onChange={this.onChange}\n                          value={this.state.user.email}\n                          name=\"email\"\n                          required\n                          type=\"email\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormControl\n                          placeholder=\"Password\"\n                          type=\"password\"\n                          onChange={this.onChange}\n                          value={this.state.user.password}\n                          name=\"password\"\n                          required\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                      <Row>\n                        <Col xs={12} sm={6}>\n                          <Button\n                            variant=\"primary\"\n                            className=\"login-btn\"\n                            type=\"submit\"\n                          >\n                            Log in\n                          </Button>\n                        </Col>\n                        <Col xs={12} sm={6} className=\"text-right\">\n                          <a\n                            href=\"javascript:void(0);\"\n                            onClick={() => this.props.changeStep(3)}\n                          >\n                            Forgot Password?\n                          </a>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                </Col>\n              </Col>\n            </Row>\n          </form>\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row, Col, Button, FormControl, FormGroup } from \"react-bootstrap\";\n\nconst initialUser = {\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\"\n};\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: { ...initialUser }\n    };\n  }\n\n  onChange = e => {\n    this.setState({\n      user: {\n        ...this.state.user,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    alert(\"Submmited successfuly.\");\n    this.setState({\n      user: { ...initialUser }\n    });\n  };\n\n  render() {\n    return (\n      <Row>\n        <Col xs={12}>\n          <form onSubmit={this.onSubmit}>\n            <Row>\n              <Col xs={12} className=\"form-container\">\n                <Col xs={12}>\n                  <h4 className=\"title\">Sign up</h4>\n                  <p className=\"title-message\">\n                    Please fill in your basic info\n                  </p>\n                </Col>\n                <Col xs={12}>\n                  <Row>\n                    <Col xs={12}>\n                      <FormGroup>\n                        <FormControl\n                          placeholder=\"Email Address\"\n                          onChange={this.onChange}\n                          value={this.state.user.email}\n                          name=\"email\"\n                          required\n                          type=\"email\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormControl\n                          placeholder=\"Password\"\n                          type=\"password\"\n                          onChange={this.onChange}\n                          value={this.state.user.password}\n                          name=\"password\"\n                          required\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                      <Row>\n                        <Col xs={12} sm={6}>\n                          <Button\n                            variant=\"primary\"\n                            className=\"login-btn\"\n                            type=\"submit\"\n                          >\n                            Sign up\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                </Col>\n              </Col>\n            </Row>\n          </form>\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row, Col, Button, FormControl, FormGroup } from \"react-bootstrap\";\n\nconst initialUser = {\n  email: \"\"\n};\n\nexport default class ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: { ...initialUser }\n    };\n  }\n\n  onChange = e => {\n    this.setState({\n      user: {\n        ...this.state.user,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    alert(\"Submmited successfuly.\");\n    this.setState({\n      user: { ...initialUser }\n    });\n  };\n\n  render() {\n    return (\n      <Row>\n        <Col xs={12}>\n          <form onSubmit={this.onSubmit}>\n            <Row>\n              <Col xs={12} className=\"form-container\">\n                <Col xs={12}>\n                  <h4 className=\"title\">Reset Password</h4>\n                  <p className=\"title-message\">\n                    Please fill in your basic info\n                  </p>\n                </Col>\n                <Col xs={12}>\n                  <Row>\n                    <Col xs={12}>\n                      <FormGroup>\n                        <FormControl\n                          placeholder=\"Email Address\"\n                          onChange={this.onChange}\n                          value={this.state.user.email}\n                          name=\"email\"\n                          required\n                          type=\"email\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                      <Row>\n                        <Col xs={12} sm={6}>\n                          <Button\n                            variant=\"primary\"\n                            className=\"login-btn\"\n                            type=\"submit\"\n                          >\n                            Submit\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                </Col>\n              </Col>\n            </Row>\n          </form>\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button, Modal, Col, Row, ButtonGroup } from \"react-bootstrap\";\nimport \"./App.css\";\nimport { Login, Signup, ForgotPassword } from \"./components\";\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      show: false,\n      step: 1,\n      theme: \"\"\n    };\n  }\n\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n\n  handleShow = theme => {\n    this.setState({ show: true, step: 1, theme });\n  };\n\n  changeStep = step => {\n    this.setState({\n      step\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Col className=\"text-center\">\n          <ButtonGroup>\n            <Button\n              variant=\"outline-danger\"\n              onClick={() => this.handleShow(\"danger\")}\n            >\n              Login\n            </Button>\n            <Button\n              variant=\"outline-primary\"\n              onClick={() => this.handleShow(\"primary\")}\n            >\n              Login\n            </Button>\n            <Button\n              variant=\"outline-success\"\n              onClick={() => this.handleShow(\"success\")}\n            >\n              Login\n            </Button>\n          </ButtonGroup>\n        </Col>\n        <Modal\n          show={this.state.show}\n          onHide={this.handleClose}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Body className={`bg-${this.state.theme}`}>\n            <Row>\n              <Col xs={12} sm={7} className=\"left-block\">\n                {this.state.step === 1 ? (\n                  <Login changeStep={this.changeStep} />\n                ) : null}\n                {this.state.step === 2 ? (\n                  <Signup changeStep={this.changeStep} />\n                ) : null}\n                {this.state.step === 3 ? (\n                  <ForgotPassword changeStep={this.changeStep} />\n                ) : null}\n              </Col>\n              <Col xs={12} sm={5} className=\"right-block\">\n                <Col xs={12}>\n                  {this.state.step === 1 ? (\n                    <h3 className=\"text-center title\">Sign up Now</h3>\n                  ) : null}\n                  {this.state.step === 2 ? (\n                    <h3 className=\"text-center title\">Login Now</h3>\n                  ) : null}\n                  {this.state.step === 3 ? (\n                    <h3 className=\"text-center title\">Reset Password</h3>\n                  ) : null}\n                  <p className=\"title-message text-center\">\n                    Lorem Ipsum is simply dummy text of the printing and\n                    typesetting industry. Lorem Ipsum has been.\n                  </p>\n                  <Col xs={12} className=\"text-center\">\n                    {this.state.step === 1 ? (\n                      <Button\n                        variant=\"primary\"\n                        onClick={() => this.changeStep(2)}\n                      >\n                        REGISTER NOW\n                      </Button>\n                    ) : null}\n                    {this.state.step === 2 ? (\n                      <Button\n                        variant=\"primary\"\n                        onClick={() => this.changeStep(1)}\n                      >\n                        LOGIN NOW\n                      </Button>\n                    ) : null}\n                    {this.state.step === 3 ? (\n                      <Button\n                        variant=\"primary\"\n                        onClick={() => this.changeStep(1)}\n                      >\n                        LOGIN NOW\n                      </Button>\n                    ) : null}\n                  </Col>\n                </Col>\n              </Col>\n            </Row>\n          </Modal.Body>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}